name: CI Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:

jobs:

  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    if: "!startsWith(github.event.head_commit.message, 'chore: release')"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
      - run: npm ci --prefer-offline

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: install
    if: "!startsWith(github.event.head_commit.message, 'chore: release')"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
      - run: npm ci --prefer-offline
      - run: npm run lint

  only-canary:
    name: Canary-only step
    runs-on: ubuntu-latest
    if: >
      !startsWith(github.event.head_commit.message, 'chore: release') &&
      env.ENV_TARGET == 'canary'
    steps:
      - run: echo "Hello Only Canary!"

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: install
    if: "!startsWith(github.event.head_commit.message, 'chore: release')"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
      - run: npm ci --prefer-offline
      - run: npm test

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-test
    if: "!startsWith(github.event.head_commit.message, 'chore: release')"
    steps:
      - run: echo "Hello Integration!"

  e2e-test:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: integration-test
    if: "!startsWith(github.event.head_commit.message, 'chore: release')"
    steps:
      - run: echo "Hello E2E!"

  release:
    name: Release (Manual)
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/main' &&
      !startsWith(github.event.head_commit.message, 'chore: release') &&
      github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}  # Use your PAT here
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
      - run: git config user.email "${{ github.actor }}@users.noreply.github.com"
      - run: git config user.name "${{ github.actor }}"
      - run: git pull origin main --rebase
      - run: npx --yes release-it --ci
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
